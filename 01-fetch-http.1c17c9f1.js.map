{"mappings":"mjBAAAA,EAAAC,EAAA,SAEe,MAAAC,EACbC,YAAYC,GACVC,KAAKC,YAAcF,EACnBC,KAAKE,KAAO,EACZF,KAAKG,QAAU,E,CAEjBC,aACEC,QAAQC,IAAIN,MACZ,MAAMO,EAAM,GAAGZ,EAAAa,gBAAgBb,EAAAc,aAAaT,KAAKC,gFAAgFD,KAAKG,gBAAgBH,KAAKE,OAE3J,OAAOQ,MAAMH,GACVI,MAAKC,IACJ,IAAKA,EAASC,GACV,MAAM,IAAIC,OAAOF,EAASG,QAE9B,OAAOH,EAASI,MAAM,IAEvBL,MAAK,EAACM,UAAEA,EAASC,KAAEA,MAClB,MAAMC,EAAanB,KAAKE,KAAOF,KAAKG,SAAWc,EACzCG,EAA4B,IAAdpB,KAAKE,KAEzB,OADAF,KAAKqB,gBACE,CAACC,OAAQJ,EAAMK,YAAaN,E,WAAWE,E,YAAYC,EAAY,IAEvEI,O,CAGLH,gBACErB,KAAKE,MAAQ,C,wDCjBjB,MACMuB,EAqEK,IAAIC,EAAAC,GAAJ,CAAmB,gBAAiB,CACvCC,UAAU,EACVC,aAAc,MACdC,aAAc,IACdC,gBAAiB,WAxEnBC,GAAO,EAAAC,EAAAC,WACb,IAAIC,EAAoB,IAAItC,EAC5B,MAAMuC,EAAc,IAAI,EAAAC,EAAAH,SAAY,CAChCI,SAAU,aACVC,UAAU,IAsBd,SAASC,IACLJ,EAAYK,UAEZN,EAAkB/B,aACjBO,MAAK,EAACW,OAACA,EAAMC,YAAEA,EAAWJ,WAAEA,EAAUC,YAAEA,MAErC,GAoBR,SAA2BE,GACvBU,EAAKU,eAAeC,mBAAmB,aAAa,EAAAC,EAAAV,SAAUZ,IAC9DG,EAASoB,S,CAvBLC,CAAkBxB,GACI,IAAlBA,EAAOyB,OAAc,MAAM,IAAIjC,MAAM,4EACrCM,GAAaM,EAAAsB,GAASC,OAAOC,QAAQ,oBAAoB3B,aACzDJ,GACAO,EAAAsB,GAASC,OAAOE,KAAK,8DACrBf,EAAYgB,QAGZhB,EAAYiB,QAAQ,IAK3B7B,MAAM8B,GACPtB,EAAKuB,WAAWC,O,CAiBpB,SAASF,EAAaG,GACpBpD,QAAQoD,MAAMA,GACd/B,EAAAsB,GAASC,OAAOS,QAAQD,EAAME,Q,CAzDhC3B,EAAKuB,WAAWK,iBAAiB,UAGjC,SAAkBC,GACdA,EAAIC,iBAGJ,MAAM/D,EAAQ8D,EAAIE,cAAcC,SAAS/D,YAAYgE,MAAMC,OAC3D,GAAa,KAAVnE,EACC,OAAO2B,EAAAsB,GAASC,OAAOS,QAAQ,4EAEnCvB,EAAoB,IAAItC,EAAkBE,GAE1CqC,EAAY+B,OAsCZnC,EAAKU,eAAe0B,UAAY,GAChC3C,EAASoB,UArCTL,G,IAdJJ,EAAYiC,QAAQC,OAAOV,iBAAiB,SAwC5C,WACIpB,G","sources":["src/js/01-fetch-api.js","src/js/01-fetch-server.js"],"sourcesContent":["import { BASE_URL, API_KEY } from './data.js'\n\nexport default class PixabayApiService {\n  constructor(query) {\n    this.searchQuery = query;\n    this.page = 1;\n    this.perPage = 40;\n  }\n  fetchCards() {\n    console.log(this);\n    const url = `${BASE_URL}?key=${API_KEY}&q=${this.searchQuery}&image_type=photo&orientation=horizontal&safesearch=true&per_page=${this.perPage}&page=${this.page}`;\n\n    return fetch(url)\n      .then(response => {\n        if (!response.ok) {\n            throw new Error(!response.status)\n          }\n        return response.json()\n    })\n      .then(({ totalHits, hits }) => {\n        const isLastPage = this.page * this.perPage >= totalHits ;\n        const isFirstPage = this.page === 1;\n        this.incrementPage();\n        return {images: hits, totalImages: totalHits, isLastPage, isFirstPage};\n      })\n      .catch();\n  }\n\n  incrementPage() {\n    this.page += 1;\n  }\n}","import '../css/styles.css';\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\nimport Notiflix from 'notiflix';\nconst debounce = require('lodash.debounce');\n\n\nimport PixabayApiService from './01-fetch-api.js'; // API\nimport getRefs from './get-refs.js';\nimport imagesTpl from './templates/images.hbs';\nimport LoadMoreBtn from './components/load-more-btn.js';\n\nconst DEBOUNCE_DELAY = 300;\nconst lightbox = getLightbox();\nconst refs = getRefs();\nlet pixabayApiService = new PixabayApiService();\nconst loadMoreBtn = new LoadMoreBtn({\n    selector: '.load-more',\n    isHidden: true,\n});\n\nrefs.searchForm.addEventListener('submit', onSearch);\nloadMoreBtn.btnRefs.button.addEventListener('click', onLoadMore);\n\nfunction onSearch(evn){\n    evn.preventDefault();\n    // refs.searchForm.reset();\n\n    const query = evn.currentTarget.elements.searchQuery.value.trim();\n    if(query === '') {\n        return Notiflix.Notify.failure('Sorry, there are no images matching your search query. Please try again.');\n    }\n    pixabayApiService = new PixabayApiService(query);\n    \n    loadMoreBtn.show();\n    clearCardsContainer();\n    loadCards();\n   \n}\n\nfunction loadCards() {\n    loadMoreBtn.disable();\n    // loadMoreBtn.hide();\n    pixabayApiService.fetchCards()\n    .then(({images, totalImages, isLastPage, isFirstPage}) => {\n        appendCardsMarkup(images);\n        if (images.length === 0) throw new Error(`Sorry, there are no images matching your search query. Please try again.`);\n        if (isFirstPage) Notiflix.Notify.success(`Hooray! We found ${totalImages} images.`);\n        if (isLastPage) {\n            Notiflix.Notify.info(\"We're sorry, but you've reached the end of search results.\");\n            loadMoreBtn.hide();\n\n        } else {\n            loadMoreBtn.enable();\n        }\n        // refs.lightbox.refresh('changed.simplelightbox');\n\n    })\n    .catch(onFetchError);\n    refs.searchForm.reset();\n}  \n\nfunction onLoadMore() {\n    loadCards();\n}\n\nfunction appendCardsMarkup(images) {\n    refs.cardsContainer.insertAdjacentHTML('beforeend', imagesTpl(images))\n    lightbox.refresh();\n}\n\nfunction clearCardsContainer(){\n    refs.cardsContainer.innerHTML = '';\n    lightbox.refresh();\n}\n\nfunction onFetchError(error) {\n  console.error(error);\n  Notiflix.Notify.failure(error.message);\n}\n\nfunction getLightbox() {\n    return new SimpleLightbox('.gallery li a', {\n        captions: true,\n        captionsData: \"alt\",\n        captionDelay: 250,\n        captionPosition: 'bottom',\n        \n    });\n}\n\n//! Infinite scroll\n// function handleScroll() {\n//   const { scrollTop, scrollHeight, clientHeight } = document.documentElement;\n\n//   if (scrollTop + clientHeight >= scrollHeight - 5) {\n//     fetchCards();\n//   }\n// }\n\n// window.addEventListener(\"scroll\", handleScroll);"],"names":["$j7oiS","parcelRequire","$a070a1b6e39b79b8$export$2e2bcd8739ae039","constructor","query","this","searchQuery","page","perPage","fetchCards","console","log","url","BASE_URL","API_KEY","fetch","then","response","ok","Error","status","json","totalHits","hits","isLastPage","isFirstPage","incrementPage","images","totalImages","catch","$e90eb655d9fbeb80$var$lightbox","$parcel$interopDefault","$fZKcF","captions","captionsData","captionDelay","captionPosition","$e90eb655d9fbeb80$var$refs","$lpPzL","default","$e90eb655d9fbeb80$var$pixabayApiService","$e90eb655d9fbeb80$var$loadMoreBtn","$frEnH","selector","isHidden","$e90eb655d9fbeb80$var$loadCards","disable","cardsContainer","insertAdjacentHTML","$dmiDl","refresh","$e90eb655d9fbeb80$var$appendCardsMarkup","length","$7Y9D8","Notify","success","info","hide","enable","$e90eb655d9fbeb80$var$onFetchError","searchForm","reset","error","failure","message","addEventListener","evn","preventDefault","currentTarget","elements","value","trim","show","innerHTML","btnRefs","button"],"version":3,"file":"01-fetch-http.1c17c9f1.js.map"}