{"mappings":"mjBAAAA,EAAAC,EAAA,S,8BCUA,MAAMC,GAAO,EAAAC,EAAAC,WACPC,EAoEG,IAAIC,EAAAC,GAAJ,CAAmB,gBAAiB,CACzCC,UAAU,EACVC,aAAc,MACdC,aAAc,IACdC,gBAAiB,WAvEfC,EAAoB,IDVX,MACbC,cACEC,KAAKC,YAAc,GACnBD,KAAKE,KAAO,EACZF,KAAKG,QAAU,E,CAEjBC,aACEC,QAAQC,IAAIN,MACZ,MAAMO,EAAM,GAAGrB,EAAAsB,gBAAgBtB,EAAAuB,aAAaT,KAAKC,gFAAgFD,KAAKG,gBAAgBH,KAAKE,OAE3J,OAAOQ,MAAMH,GACVI,MAAKC,IACJ,IAAKA,EAASC,GACV,MAAM,IAAIC,OAAOF,EAASG,QAE9B,OAAOH,EAASI,MAAM,IAEvBL,MAAK,EAACM,UAAEA,EAASC,KAAEA,MAClB,MAAMC,EAAanB,KAAKE,KAAOF,KAAKG,SAAWc,EACzCG,EAA4B,IAAdpB,KAAKE,KAEzB,OADAF,KAAKqB,gBACE,CAACC,OAAQJ,EAAMK,YAAaN,E,WAAWE,E,YAAYC,EAAY,IAEvEI,O,CAGLC,SAASC,GACP1B,KAAKC,YAAcyB,EACnB1B,KAAKE,KAAO,C,CAGdmB,gBACErB,KAAKE,MAAQ,C,GCrBXyB,EAAc,ICbL,MACXC,eAAiB,CACbC,OAAQ,UAEZ9B,aAAY+B,SAAEA,EAAQC,SAAEA,GAAW,IACjC/B,KAAKgC,OAAShC,KAAKiC,OAAOH,GAE1BC,GAAY/B,KAAKkC,OACjBlC,KAAKgC,OAAOG,YAAc,W,CAG5BF,OAAOH,GACH,OAAOM,SAASC,cAAcP,E,CAGlCQ,OACEtC,KAAKgC,OAAOO,UAAW,EACvBvC,KAAKgC,OAAOQ,UAAUC,OAAO,Y,CAG/BP,OACElC,KAAKgC,OAAOQ,UAAUE,IAAI,Y,CAG5BC,MACI3C,KAAKgC,OAAOO,UAAW,EACvBvC,KAAKgC,OAAOG,YAAc,U,GDbE,CAClCL,SAAU,aACVC,UAAU,IAsBZ,SAASa,IACP,OAAO9C,EAAkBM,aACtBO,MAAK,EAACW,OAAEA,EAAMC,YAAEA,EAAWJ,WAAEA,EAAUC,YAAEA,MAExC,GAqBN,SAA2BE,GACzBlC,EAAKyD,eAAeC,mBAAmB,aAAa,EAAAC,EAAAzD,SAAUgC,IAC9D/B,EAASyD,S,CAxBLC,CAAkB3B,GACI,IAAlBA,EAAO4B,OAET,MADAvB,EAAYO,OACN,IAAIpB,MAAM,4EAEdM,GACF5B,EAAA2D,GAASC,OAAOC,QAAQ,oBAAoB9B,aAC1CJ,GACF3B,EAAA2D,GAASC,OAAOE,KAAK,8DACrB3B,EAAYgB,OAEZhB,EAAYW,MAAM,IAGrBd,MAAM+B,GACNC,QAAQpE,EAAKqE,WAAWC,Q,CAY7B,SAASC,IACPvE,EAAKyD,eAAee,UAAY,GAChCrE,EAASyD,S,CAGX,SAASO,EAAaM,GACpBxD,QAAQwD,MAAMA,GACdrE,EAAA2D,GAASC,OAAOU,QAAQD,EAAME,SAC9BpC,EAAYO,M,CAzDd9C,EAAKqE,WAAWO,iBAAiB,UAGjC,SAAkBC,GAChBA,EAAIC,iBACJP,IACAhC,EAAYO,OAEZ,MAAMR,EAAQuC,EAAIE,cAAcC,SAASnE,YAAYoE,MAAMC,OAC3D,GAAc,KAAV5C,EACF,OAAOlC,EAAA2D,GAASC,OAAOU,QAAQ,4EAE/BhE,EAAkB2B,SAASC,GAE3BiC,IACAf,IAAYY,SAAQ,IAAMpE,EAAKqE,WAAWC,S,IAd9C/B,EAAYK,OAAOgC,iBAAiB,SAuCpC,WACEpB,G","sources":["src/js/01-fetch-api.js","src/js/01-fetch-server.js","src/js/components/load-more-btn.js"],"sourcesContent":["import { BASE_URL, API_KEY } from './data.js'\n\nexport default class PixabayApiService {\n  constructor() {\n    this.searchQuery = '';\n    this.page = 1;\n    this.perPage = 40;\n  }\n  fetchCards() {\n    console.log(this);\n    const url = `${BASE_URL}?key=${API_KEY}&q=${this.searchQuery}&image_type=photo&orientation=horizontal&safesearch=true&per_page=${this.perPage}&page=${this.page}`;\n\n    return fetch(url)\n      .then(response => {\n        if (!response.ok) {\n            throw new Error(!response.status)\n          }\n        return response.json()\n    })\n      .then(({ totalHits, hits }) => {\n        const isLastPage = this.page * this.perPage >= totalHits ;\n        const isFirstPage = this.page === 1;\n        this.incrementPage();\n        return {images: hits, totalImages: totalHits, isLastPage, isFirstPage};\n      })\n      .catch();\n  }\n\n  newQuery(query) {\n    this.searchQuery = query;\n    this.page = 1;\n  }\n\n  incrementPage() {\n    this.page += 1;\n  }\n}","import '../css/styles.css';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport Notiflix from 'notiflix';\n\nimport PixabayApiService from './01-fetch-api.js'; // API\nimport getRefs from './get-refs.js';\nimport imagesTpl from '../templates/images.hbs';\nimport LoadMoreBtn from './components/load-more-btn.js';\n\nconst refs = getRefs();\nconst lightbox = getLightbox();\nconst pixabayApiService = new PixabayApiService();\nconst loadMoreBtn = new LoadMoreBtn({\n  selector: '.load-more',\n  isHidden: true,\n});\n\nrefs.searchForm.addEventListener('submit', onSearch);\nloadMoreBtn.button.addEventListener('click', onLoadMore);\n\nfunction onSearch(evn) {\n  evn.preventDefault();\n  clearCardsContainer()\n  loadMoreBtn.hide();\n\n  const query = evn.currentTarget.elements.searchQuery.value.trim();\n  if (query === '') {\n    return Notiflix.Notify.failure('Sorry, there are no images matching your search query. Please try again.');\n  } else {\n    pixabayApiService.newQuery(query);\n\n    clearCardsContainer();\n    loadCards().finally(() => refs.searchForm.reset());\n  }\n}\n\nfunction loadCards() {\n  return pixabayApiService.fetchCards()\n    .then(({ images, totalImages, isLastPage, isFirstPage }) => {\n      appendCardsMarkup(images);\n      if (images.length === 0) {\n        loadMoreBtn.hide();\n        throw new Error(`Sorry, there are no images matching your search query. Please try again.`);\n      }\n      if (isFirstPage)\n        Notiflix.Notify.success(`Hooray! We found ${totalImages} images.`);\n      if (isLastPage) {\n        Notiflix.Notify.info(\"We're sorry, but you've reached the end of search results.\");\n        loadMoreBtn.end();\n      } else {\n        loadMoreBtn.show();\n      }\n    })\n    .catch(onFetchError)\n    .finally(refs.searchForm.reset());\n}\n\nfunction onLoadMore() {\n  loadCards();\n}\n\nfunction appendCardsMarkup(images) {\n  refs.cardsContainer.insertAdjacentHTML('beforeend', imagesTpl(images));\n  lightbox.refresh();\n}\n\nfunction clearCardsContainer() {\n  refs.cardsContainer.innerHTML = '';\n  lightbox.refresh();\n}\n\nfunction onFetchError(error) {\n  console.error(error);\n  Notiflix.Notify.failure(error.message);\n  loadMoreBtn.hide();\n}\n\nfunction getLightbox() {\n  return new SimpleLightbox('.gallery li a', {\n    captions: true,\n    captionsData: 'alt',\n    captionDelay: 250,\n    captionPosition: 'bottom',\n  });\n}\n","export default class LoadMoreBtn {\n    static classes = {\n        hidden: \"hidden\",\n      };\n    constructor({ selector, isHidden = true }) {\n      this.button = this.getBtn(selector),\n  \n      isHidden && this.hide();\n      this.button.textContent = 'Load more'\n    }\n  \n    getBtn(selector) {\n        return document.querySelector(selector);\n    }\n  \n    show() {\n      this.button.disabled = false;\n      this.button.classList.remove('is-hidden');\n    }\n  \n    hide() {\n      this.button.classList.add('is-hidden');\n    }\n\n    end() {\n        this.button.disabled = true;\n        this.button.textContent = \"The end!\";\n      }\n  }"],"names":["$j7oiS","parcelRequire","$e90eb655d9fbeb80$var$refs","$lpPzL","default","$e90eb655d9fbeb80$var$lightbox","$parcel$interopDefault","$fZKcF","captions","captionsData","captionDelay","captionPosition","$e90eb655d9fbeb80$var$pixabayApiService","constructor","this","searchQuery","page","perPage","fetchCards","console","log","url","BASE_URL","API_KEY","fetch","then","response","ok","Error","status","json","totalHits","hits","isLastPage","isFirstPage","incrementPage","images","totalImages","catch","newQuery","query","$e90eb655d9fbeb80$var$loadMoreBtn","static","hidden","selector","isHidden","button","getBtn","hide","textContent","document","querySelector","show","disabled","classList","remove","add","end","$e90eb655d9fbeb80$var$loadCards","cardsContainer","insertAdjacentHTML","$ijW3x","refresh","$e90eb655d9fbeb80$var$appendCardsMarkup","length","$7Y9D8","Notify","success","info","$e90eb655d9fbeb80$var$onFetchError","finally","searchForm","reset","$e90eb655d9fbeb80$var$clearCardsContainer","innerHTML","error","failure","message","addEventListener","evn","preventDefault","currentTarget","elements","value","trim"],"version":3,"file":"01-fetch-load-more.60fcdbc9.js.map"}