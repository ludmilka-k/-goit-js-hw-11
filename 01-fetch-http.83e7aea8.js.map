{"mappings":"+jBAAAA,EAAAC,EAAA,S,0BAEeC,ECFX,W,sBDEiBC,EACPC,G,aACVC,KAAKC,YAAcF,EACnBC,KAAKE,KAAO,EACZF,KAAKG,QAAU,E,iBAEjBC,IAAA,a,MAAA,W,WACEC,QAAQC,IAAIN,MACZ,IAAMO,EAAM,GAAmBC,OAAhBC,EAAAC,SAAS,SAAoBF,OAAbC,EAAAE,QAAQ,OAA0FH,OAArFR,KAAKC,YAAY,sEAAyFO,OAArBR,KAAKG,QAAQ,UAAkBK,OAAVR,KAAKE,MAE3J,OAAOU,MAAML,GACVM,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACV,MAAM,IAAIC,OAAOF,EAASG,QAE9B,OAAOH,EAASI,M,IAEjBL,MAAK,SAAAM,G,IAAGC,EAASD,EAATC,UAAWC,EAAIF,EAAJE,KACZC,EAAaC,EAAKrB,KAAOqB,EAAKpB,SAAWiB,EACzCI,EAA4B,IAAdD,EAAKrB,KAEzB,OADAqB,EAAKE,gBACE,CAACC,OAAQL,EAAMM,YAAaP,EAAWE,aAAYE,c,IAE3DI,O,IAGLxB,IAAA,gB,MAAA,WACEJ,KAAKE,MAAQ,C,OC7Bb,G,kDCYJ,IACM2B,EAqEK,IAAIC,EAAAC,GAAJ,CAAmB,gBAAiB,CACvCC,UAAU,EACVC,aAAc,MACdC,aAAc,IACdC,gBAAiB,WAxEnBC,GAAO,EAAAC,EAAAC,WACTC,EAAoB,IAAI1C,EACtB2C,EAAc,IAAI,EAAAC,EAAAH,SAAY,CAChCI,SAAU,aACVC,UAAU,IAsBd,SAASC,IACLJ,EAAYK,UAEZN,EAAkBO,aACjBjC,MAAK,SAAAM,G,IAAEO,EAAMP,EAANO,OAAQC,EAAWR,EAAXQ,YAAaL,EAAUH,EAAVG,WAAYE,EAAWL,EAAXK,YAErC,GAoBR,SAA2BE,GACvBU,EAAKW,eAAeC,mBAAmB,aAAa,EAAAC,EAAAX,SAAUZ,IAC9DG,EAASqB,S,CAvBLC,CAAkBzB,GACI,IAAlBA,EAAO0B,OAAc,MAAM,IAAIpC,MAAO,4EACtCQ,GAAaM,EAAAuB,GAASC,OAAOC,QAAQ,oBAAgC/C,OAAZmB,EAAY,aACrEL,GACAQ,EAAAuB,GAASC,OAAOE,KAAK,8DACrBhB,EAAYiB,QAGZjB,EAAYkB,Q,IAKnB9B,MAAM+B,GACPvB,EAAKwB,WAAWC,O,CAiBpB,SAASF,EAAaG,GACpBzD,QAAQyD,MAAMA,GACdhC,EAAAuB,GAASC,OAAOS,QAAQD,EAAME,Q,CAzDhC5B,EAAKwB,WAAWK,iBAAiB,UAGjC,SAAkBC,GACdA,EAAIC,iBAGJ,IAAMpE,EAAQmE,EAAIE,cAAcC,SAASpE,YAAYqE,MAAMC,OAC3D,GAAa,KAAVxE,EACC,OAAO+B,EAAAuB,GAASC,OAAOS,QAAQ,4EAEnCxB,EAAoB,IAAI1C,EAAkBE,GAE1CyC,EAAYgC,OAsCZpC,EAAKW,eAAe0B,UAAY,GAChC5C,EAASqB,UArCTN,G,IAdJJ,EAAYkC,QAAQC,OAAOV,iBAAiB,SAwC5C,WACIrB,G","sources":["src/js/01-fetch-api.js","<<jsx-config-pragma.js>>","src/js/01-fetch-server.js"],"sourcesContent":["import { BASE_URL, API_KEY } from './data.js'\n\nexport default class PixabayApiService {\n  constructor(query) {\n    this.searchQuery = query;\n    this.page = 1;\n    this.perPage = 40;\n  }\n  fetchCards() {\n    console.log(this);\n    const url = `${BASE_URL}?key=${API_KEY}&q=${this.searchQuery}&image_type=photo&orientation=horizontal&safesearch=true&per_page=${this.perPage}&page=${this.page}`;\n\n    return fetch(url)\n      .then(response => {\n        if (!response.ok) {\n            throw new Error(!response.status)\n          }\n        return response.json()\n    })\n      .then(({ totalHits, hits }) => {\n        const isLastPage = this.page * this.perPage >= totalHits ;\n        const isFirstPage = this.page === 1;\n        this.incrementPage();\n        return {images: hits, totalImages: totalHits, isLastPage, isFirstPage};\n      })\n      .catch();\n  }\n\n  incrementPage() {\n    this.page += 1;\n  }\n}",null,"import '../css/styles.css';\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\nimport Notiflix from 'notiflix';\nconst debounce = require('lodash.debounce');\n\n\nimport PixabayApiService from './01-fetch-api.js'; // API\nimport getRefs from './get-refs.js';\nimport imagesTpl from './templates/images.hbs';\nimport LoadMoreBtn from './components/load-more-btn.js';\n\nconst DEBOUNCE_DELAY = 300;\nconst lightbox = getLightbox();\nconst refs = getRefs();\nlet pixabayApiService = new PixabayApiService();\nconst loadMoreBtn = new LoadMoreBtn({\n    selector: '.load-more',\n    isHidden: true,\n});\n\nrefs.searchForm.addEventListener('submit', onSearch);\nloadMoreBtn.btnRefs.button.addEventListener('click', onLoadMore);\n\nfunction onSearch(evn){\n    evn.preventDefault();\n    // refs.searchForm.reset();\n\n    const query = evn.currentTarget.elements.searchQuery.value.trim();\n    if(query === '') {\n        return Notiflix.Notify.failure('Sorry, there are no images matching your search query. Please try again.');\n    }\n    pixabayApiService = new PixabayApiService(query);\n    \n    loadMoreBtn.show();\n    clearCardsContainer();\n    loadCards();\n   \n}\n\nfunction loadCards() {\n    loadMoreBtn.disable();\n    // loadMoreBtn.hide();\n    pixabayApiService.fetchCards()\n    .then(({images, totalImages, isLastPage, isFirstPage}) => {\n        appendCardsMarkup(images);\n        if (images.length === 0) throw new Error(`Sorry, there are no images matching your search query. Please try again.`);\n        if (isFirstPage) Notiflix.Notify.success(`Hooray! We found ${totalImages} images.`);\n        if (isLastPage) {\n            Notiflix.Notify.info(\"We're sorry, but you've reached the end of search results.\");\n            loadMoreBtn.hide();\n\n        } else {\n            loadMoreBtn.enable();\n        }\n        // refs.lightbox.refresh('changed.simplelightbox');\n\n    })\n    .catch(onFetchError);\n    refs.searchForm.reset();\n}  \n\nfunction onLoadMore() {\n    loadCards();\n}\n\nfunction appendCardsMarkup(images) {\n    refs.cardsContainer.insertAdjacentHTML('beforeend', imagesTpl(images))\n    lightbox.refresh();\n}\n\nfunction clearCardsContainer(){\n    refs.cardsContainer.innerHTML = '';\n    lightbox.refresh();\n}\n\nfunction onFetchError(error) {\n  console.error(error);\n  Notiflix.Notify.failure(error.message);\n}\n\nfunction getLightbox() {\n    return new SimpleLightbox('.gallery li a', {\n        captions: true,\n        captionsData: \"alt\",\n        captionDelay: 250,\n        captionPosition: 'bottom',\n        \n    });\n}"],"names":["$8MBJY","parcelRequire","$33010803a113876d$export$2e2bcd8739ae039","PixabayApiService","query","this","searchQuery","page","perPage","key","console","log","url","concat","$7CFNy","BASE_URL","API_KEY","fetch","then","response","ok","Error","status","json","param","totalHits","hits","isLastPage","_this","isFirstPage","incrementPage","images","totalImages","catch","$1544310caa37121c$var$lightbox","$parcel$interopDefault","$5IjG7","captions","captionsData","captionDelay","captionPosition","$1544310caa37121c$var$refs","$3vKGz","default","$1544310caa37121c$var$pixabayApiService","$1544310caa37121c$var$loadMoreBtn","$edmVP","selector","isHidden","$1544310caa37121c$var$loadCards","disable","fetchCards","cardsContainer","insertAdjacentHTML","$kLHip","refresh","$1544310caa37121c$var$appendCardsMarkup","length","$6JpON","Notify","success","info","hide","enable","$1544310caa37121c$var$onFetchError","searchForm","reset","error","failure","message","addEventListener","evn","preventDefault","currentTarget","elements","value","trim","show","innerHTML","btnRefs","button"],"version":3,"file":"01-fetch-http.83e7aea8.js.map"}